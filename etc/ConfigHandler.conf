# ---------------------------------------------------------------------
# Class configuration file 
# ---------------------------------------------------------------------
#######################################################################
#  THIS FILE SHOULD ONLY BE USED TO SET SIMPLE CONFIGURATION VALUES. 
# NOT AS A REPLACEMENT FOR SETTING VARIABLES PROPERLY WITHIN A CLASS!! 
#
# THE PARAMETERS SET BY CONFIGHANDLER USING THIS FILE ARE SET DIRECTLY 
# IN THE CALLING CLASS'S "self". PLEASE BE AWARE WHEN CREATING THIS 
# CONFIG FILE 
#######################################################################
#
#  I.e. The line "option = 1" in this file creates 
#       "callingobject.self.option = 1" 
#       AND 
#       "callingobject.self._config.option = 1". 
#
#  class some_python_class(object):
#    def __init__(self):
#      ConfigHandler(self, config_file = "/dir/dir/file.conf")
# 
#  print self.option
#  1
#   
#  print self._config.option
#  1
#
# SECTIONS:
#  Each [SECTION] defines a specific set of option-value pairs. The 
# SECTION name is userspace and arbitrary. 
#
# OPTIONS:
#  option=value
#   Each option within a section will create a variable BY THE SAME 
#   NAME AS THE 'OPTION' in the instantiated ConfigHandler OBJECT with 
# its value set to "value". 
# I.e.
#  "name=Hydrogen" creates a variable called "self.name" in the 
#  ConfigHandler object with the value of "Hydrogen". 
#  This is the same as if the line of code 'self.name = str("Hydrogen")' 
#  had been written directly into the calling objects code.  
#
#   Caveats:
#     - Spaces after the "=" are ignored.
#
#     - ALL VALUES ARE A STRING...so they MAY have to be converted for 
#       use. At instantiation, ConfigHandler attempts to convert floats, 
#       integers and boolean - but be prepared to check for this. 
#
#     - Numbers will be returned as floats or int...never bools. 
#
#     - Quotes around values will be returned as part of the string. 
#
#  
# FORMAT:
#  [section_name]
#    option=value
#
#  - Lines starting with "#" are ignored. 
#
#  - Lines with "#" AFTER DATA ARE *NOT* IGNORED. 
#    I.e. name=Hydrogen # This comment will be included in name's value
#
#  - Do NOT use quotes for text values. 
# ---------------------------------------------------------------------


###############################################################################
[LOGGING]
logfile             = MRATrefactor.log
log_path            = /shared/GitHub/Tesera/MRAT_Refactor/log/
app_name            = MRATrefactor 
log_level           = 10 
screendump          = True
create_paths        = False 
###############################################################################

[CORE]
# Eventually rejigger ConfigHandler to assemble the paths automagically, 
# For now just use full paths in all
root_dir            = /shared/GitHub/Tesera/MRAT_Refactor/
conf_dir            = /shared/GitHub/Tesera/MRAT_Refactoretc/
etc_dir             = /shared/GitHub/Tesera/MRAT_Refactoretc/
log_dir             = /shared/GitHub/Tesera/MRAT_Refactorlog/
bin_dir             = /shared/GitHub/Tesera/MRAT_Refactorbin/
lib_dir             = /shared/GitHub/Tesera/MRAT_Refactorlib/
share_dir           = /shared/GitHub/Tesera/MRAT_Refactorshare/
Rwd                 = /shared/GitHub/Tesera/MRAT_RefactorRwd/

[RSERVE_HANDLER]
host        = localhost 
port        = 6311
atomicArray = True 
arrayOrder  = C 
defaultVoid = False 
oobCallback = None


